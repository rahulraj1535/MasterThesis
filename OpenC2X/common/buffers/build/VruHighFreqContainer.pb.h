// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VruHighFreqContainer.proto

#ifndef PROTOBUF_VruHighFreqContainer_2eproto__INCLUDED
#define PROTOBUF_VruHighFreqContainer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace its {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_VruHighFreqContainer_2eproto();
void protobuf_AssignDesc_VruHighFreqContainer_2eproto();
void protobuf_ShutdownFile_VruHighFreqContainer_2eproto();

class VruHighFreqContainer;

// ===================================================================

class VruHighFreqContainer : public ::google::protobuf::Message {
 public:
  VruHighFreqContainer();
  virtual ~VruHighFreqContainer();

  VruHighFreqContainer(const VruHighFreqContainer& from);

  inline VruHighFreqContainer& operator=(const VruHighFreqContainer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VruHighFreqContainer& default_instance();

  void Swap(VruHighFreqContainer* other);

  // implements Message ----------------------------------------------

  VruHighFreqContainer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VruHighFreqContainer& from);
  void MergeFrom(const VruHighFreqContainer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 heading = 1;
  inline bool has_heading() const;
  inline void clear_heading();
  static const int kHeadingFieldNumber = 1;
  inline ::google::protobuf::int64 heading() const;
  inline void set_heading(::google::protobuf::int64 value);

  // required int64 headingConfidence = 2;
  inline bool has_headingconfidence() const;
  inline void clear_headingconfidence();
  static const int kHeadingConfidenceFieldNumber = 2;
  inline ::google::protobuf::int64 headingconfidence() const;
  inline void set_headingconfidence(::google::protobuf::int64 value);

  // required int64 speed = 3;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 3;
  inline ::google::protobuf::int64 speed() const;
  inline void set_speed(::google::protobuf::int64 value);

  // required int64 speedConfidence = 4;
  inline bool has_speedconfidence() const;
  inline void clear_speedconfidence();
  static const int kSpeedConfidenceFieldNumber = 4;
  inline ::google::protobuf::int64 speedconfidence() const;
  inline void set_speedconfidence(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:its.VruHighFreqContainer)
 private:
  inline void set_has_heading();
  inline void clear_has_heading();
  inline void set_has_headingconfidence();
  inline void clear_has_headingconfidence();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_speedconfidence();
  inline void clear_has_speedconfidence();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 heading_;
  ::google::protobuf::int64 headingconfidence_;
  ::google::protobuf::int64 speed_;
  ::google::protobuf::int64 speedconfidence_;
  friend void  protobuf_AddDesc_VruHighFreqContainer_2eproto();
  friend void protobuf_AssignDesc_VruHighFreqContainer_2eproto();
  friend void protobuf_ShutdownFile_VruHighFreqContainer_2eproto();

  void InitAsDefaultInstance();
  static VruHighFreqContainer* default_instance_;
};
// ===================================================================


// ===================================================================

// VruHighFreqContainer

// required int64 heading = 1;
inline bool VruHighFreqContainer::has_heading() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VruHighFreqContainer::set_has_heading() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VruHighFreqContainer::clear_has_heading() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VruHighFreqContainer::clear_heading() {
  heading_ = GOOGLE_LONGLONG(0);
  clear_has_heading();
}
inline ::google::protobuf::int64 VruHighFreqContainer::heading() const {
  // @@protoc_insertion_point(field_get:its.VruHighFreqContainer.heading)
  return heading_;
}
inline void VruHighFreqContainer::set_heading(::google::protobuf::int64 value) {
  set_has_heading();
  heading_ = value;
  // @@protoc_insertion_point(field_set:its.VruHighFreqContainer.heading)
}

// required int64 headingConfidence = 2;
inline bool VruHighFreqContainer::has_headingconfidence() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VruHighFreqContainer::set_has_headingconfidence() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VruHighFreqContainer::clear_has_headingconfidence() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VruHighFreqContainer::clear_headingconfidence() {
  headingconfidence_ = GOOGLE_LONGLONG(0);
  clear_has_headingconfidence();
}
inline ::google::protobuf::int64 VruHighFreqContainer::headingconfidence() const {
  // @@protoc_insertion_point(field_get:its.VruHighFreqContainer.headingConfidence)
  return headingconfidence_;
}
inline void VruHighFreqContainer::set_headingconfidence(::google::protobuf::int64 value) {
  set_has_headingconfidence();
  headingconfidence_ = value;
  // @@protoc_insertion_point(field_set:its.VruHighFreqContainer.headingConfidence)
}

// required int64 speed = 3;
inline bool VruHighFreqContainer::has_speed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VruHighFreqContainer::set_has_speed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VruHighFreqContainer::clear_has_speed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VruHighFreqContainer::clear_speed() {
  speed_ = GOOGLE_LONGLONG(0);
  clear_has_speed();
}
inline ::google::protobuf::int64 VruHighFreqContainer::speed() const {
  // @@protoc_insertion_point(field_get:its.VruHighFreqContainer.speed)
  return speed_;
}
inline void VruHighFreqContainer::set_speed(::google::protobuf::int64 value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:its.VruHighFreqContainer.speed)
}

// required int64 speedConfidence = 4;
inline bool VruHighFreqContainer::has_speedconfidence() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VruHighFreqContainer::set_has_speedconfidence() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VruHighFreqContainer::clear_has_speedconfidence() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VruHighFreqContainer::clear_speedconfidence() {
  speedconfidence_ = GOOGLE_LONGLONG(0);
  clear_has_speedconfidence();
}
inline ::google::protobuf::int64 VruHighFreqContainer::speedconfidence() const {
  // @@protoc_insertion_point(field_get:its.VruHighFreqContainer.speedConfidence)
  return speedconfidence_;
}
inline void VruHighFreqContainer::set_speedconfidence(::google::protobuf::int64 value) {
  set_has_speedconfidence();
  speedconfidence_ = value;
  // @@protoc_insertion_point(field_set:its.VruHighFreqContainer.speedConfidence)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace its

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_VruHighFreqContainer_2eproto__INCLUDED
